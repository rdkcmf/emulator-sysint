#!/bin/sh
##############################################################################
# If not stated otherwise in this file or this component's LICENSE file the
# following copyright and licenses apply:
#
# Copyright 2020 RDK Management
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
##############################################################################
### BEGIN INIT INFO
# Provides:          rmf-streamer
# Should-Start:
# Required-Start:    iarm-bus-services
# Required-Stop:
# Default-Start:     3
# Default-Stop:
# Short-Description: 
### END INIT INFO
. /lib/rdk/init-functions

# Defaults can be overridden in this file
INIT_SCRIPT_DEFAULTS_FILE="/etc/include.properties"

# Load alternate configuration if exists
if [ -f $INIT_SCRIPT_DEFAULTS_FILE ]; then
     . $INIT_SCRIPT_DEFAULTS_FILE
fi

# Defaults
INIT_SCRIPT_NAME="RMF STREAMER"                      # full path to the executable
INIT_SCRIPT_EXECUTABLE=""                            # options to pass to the executable 
INIT_SCRIPT_OPTIONS=""                               # a decriptive name 
INIT_SCRIPT_HOMEDIR="/"                              # place where to cd before running
INIT_SCRIPT_PIDFILE=""                               # pid file name
INIT_SCRIPT_LOGFILE=""                               # log file name 
INIT_SLEEPTIME=""                                    # how long to wait for startup and shutdown
 
. lib/rdk/stackUtils.sh

RMFSTRLOG="$TEMP_LOG_PATH/pipe_rmfstr_log"
RILOGPATH="$TEMP_LOG_PATH/pipe_ocapri_log"

configMode="HEADED_GW"

start_function() {
    pre_start "$INIT_SCRIPT_LOGFILE" ">>"
    dbgenvPath=`setdbgenvPath`

    isSeparateLog=`grep "SEPARATE.LOGFILE.SUPPORT" "$dbgenvPath" | cut -d '=' -f2`
    if [ "$isSeparateLog" = "TRUE" ] ; then
          echo "RDK separate log: is enabled"
    fi
    if [ "$configMode" != "CLIENT" ] ; then
         if [ "$isSeparateLog" = "TRUE" ] ; then
              # Checking the logging path before startup
              value=`ps -ww | grep $RMFSTRLOG | grep -v grep`
              if [ "$value" = "" ]; then
                   cat $RMFSTRLOG >> $LOG_PATH/rmfstr_log.txt &
              fi
              # Call the module starter with module name and the utility script
              sh /lib/rdk/module-starter "RMF-STREAMER" "$RMFSTRLOG" runRMFStreamer &
         else
              # Checking the logging path before startup
              value=`ps -ww | grep $RILOGPATH | grep -v grep`
              if [ "$value" = "" ]; then
                   cat $RILOGPATH >> $LOG_PATH/ocapri_log.txt &
              fi
              sh /lib/rdk/module-starter "RMF-STREAMER" "$LOG_PATH/ocapri_log.txt" runRMFStreamer &
         fi
         sh $RDK_PATH/monitorRMF.sh &
    fi
    post_start $?
    return 0
}

stop_function() {
    pre_stop
    post_stop 0
    return 0
}
 
case "$1" in
  start)
    start_function
    ;;
  stop)
    stop_function
    ;;
  restart)
    $0 stop && $0 start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
    exit 1
  ;;
esac

